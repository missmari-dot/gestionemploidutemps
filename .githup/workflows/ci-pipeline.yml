<<<<<<< HEAD
name: CI - Gestionemploidutemps Service

on:
  push:
    branches:
      - main
      - develop
      - preprod
      - staging
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: mariama640/gestionemploidutemps
      REGISTRY_DEV: mariama640/dev-registry
      REGISTRY_PROD: mariama640/prod-registry
      SONAR_PROJECT_KEY: missmari-dot_gestionemploidutemps
      SONAR_ORG: missmari-dot
      SONAR_HOST: https://sonarcloud.io

    steps:
      - name: Cloner le repo
        uses: actions/checkout@v3

      - name: 🔧 Configurer JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build du projet
        run: mvn clean install -DskipTests

      - name: 🎯 Vérification SonarQube
        run: mvn sonar:sonar -Dsonar.projectKey=$SONAR_PROJECT_KEY -Dsonar.organization=$SONAR_ORG -Dsonar.host.url=$SONAR_HOST
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: 📂 Stocker les artefacts de build
        uses: actions/upload-artifact@v4
        with:
          name: gestionemploidutemps-artifact
          path: target/*.jar

  docker:
    needs: build
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: mariama640/gestionemploidutemps

    steps:
      - name: 🛎 Cloner le repo
        uses: actions/checkout@v3

      - name: 📥 Télécharger les artefacts de build
        uses: actions/download-artifact@v4
        with:
          name: gestionemploidutemps-artifact
          path: target

      - name: 🔑 Login à Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: 🏷 Création et Push de l'image Docker
        run: |
          TAG=$(echo $GITHUB_REF | sed 's/refs\/heads\///')
          IMAGE_TAG=${{ env.IMAGE_NAME }}:$TAG
          echo "Création de l'image Docker avec le tag : $IMAGE_TAG"
          docker build -t $IMAGE_TAG .
          docker push $IMAGE_TAG

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: mariama640/gestionemploidutemps

    steps:
      - name: 🛎 Cloner le repo
        uses: actions/checkout@v3

      - name: 🚀 Déploiement selon l'environnement
        run: |
          TAG=$(echo $GITHUB_REF | sed 's/refs\/heads\///')
          if [[ "$TAG" == "master" ]]; then
            echo "Déploiement en DEV sur Docker..."
            docker run -d -p 8080:8080 ${{ env.IMAGE_NAME }}:master
          elif [[ "$TAG" == "staging" ]]; then
            echo "Déploiement en STAGING sur Docker..."
            docker run -d -p 8080:8080 ${{ env.IMAGE_NAME }}:staging
          elif [[ "$TAG" == "preprod" || "$TAG" == "prod" ]]; then
            echo "Déploiement en K8s (non configuré pour l’instant)"
            # Ici, on ajoutera plus tard le script pour déployer sur Kubernetes
          fi
=======
name: CI - Etudiant Service

on:
  push:
    branches:
      - main
      - develop
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Cloner le repo
        uses: actions/checkout@v3

      - name: 🏗️ Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: 🏗️ Build du projet
        run: mvn clean install -DskipTests

      - name: 🧪 Exécuter les tests
        run: mvn test

      - name: 🎯 Vérification SonarQube
        run: mvn sonar:sonar -Dsonar.projectKey=missmari-dot_gestionemploidutemps -Dsonar.organization=missmari-dot -Dsonar.host.url=https://sonarcloud.io
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: 🏷 Création d’une image Docker
        run: |
          docker build -t gestionemploidutemps:latest .

      - name: 🔑 Login à Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: 🚀 Push de l'image Docker (Docker Hub)
        run: |
          docker tag gestionemploidutemps:latest mariama640/gestionemploidutemps:latest
          docker push mariama640/gestionemploidutemps:latest

      - name: 🔒 Logout de Docker Hub
        run: docker logout
>>>>>>> e61d308bcbdf57de88f6810750639bb01527d76a
